{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation : Create a ELK stack  using chef on a single EC2 instance. This template demonstrates using the AWS CloudFormation bootstrap scripts to install jenkins opennjdk at instance launch time. ",
    "Mappings": {
        "AWSInstanceType2Arch": {
            "t2.micro": {
                "Arch": "HVM64"
            },
            "t2.small": {
                "Arch": "HVM64"
            }
        },
        "AWSInstanceType2NATArch": {
            "t2.micro": {
                "Arch": "NATHVM64"
            },
            "t2.small": {
                "Arch": "NATHVM64"
            }
        },
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "HVM64": "ami-43a15f3e"
            }
        }
    },
    "Resources": {
        "ELKInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "ELKRoleProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref": "InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "ELKSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash \n",
                                "service ufw stop\n",
                                "apt-get update\n",
                                "curl -L https://omnitruck.chef.io/install.sh | bash\n"
                                 "/opt/chef/embedded/bin/gem install berkshelf --no-ri --no-rdoc"
                            ]
                        ]
                    }
                }
            }
        },
        "ELKSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable Jenkins access via port 8080",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },            
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3d485f1d-fddc-46ee-9ebf-8c79afc2c214"
                }
            }
        },
        "ELKRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "cloudformation:CancelUpdateStack",
                                        "cloudformation:CreateStack",
                                        "cloudformation:ListStackResources",
                                        "cloudformation:DescribeStackEvents",
                                        "cloudformation:UpdateStack"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Ref": "AWS::StackId"
                                        }
                                    ]
                                },
                                {
                                    "Action": [
                                        "ec2:StartInstances",
                                        "ec2:RunInstances",
                                        "ec2:DescribeInstances",
                                        "ec2:DescribeInstanceStatus",
                                        "ec2:AuthorizeSecurityGroupIngress"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        },
                        "PolicyName": "ELKPolicies"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "ELKRoleProfile": {
            "Properties": {
                "Roles": [
                    {
                        "Ref": "ELKRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        }
    },
    "Outputs": {
        "WebsiteURL": {
            "Description": "ELK Stack URL",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "ELKInstance",
                                "PublicIp"
                            ]
                        }
            
                    ]
                ]
            }
        }
    }
