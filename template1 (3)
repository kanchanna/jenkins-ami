AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation : Create a Jenkins
  server using a single EC2 instance. This template demonstrates using the AWS
  CloudFormation bootstrap scripts to install jenkins opennjdk at instance
  launch time. 
Parameters:
  jenkinsPWParam:
    ConstraintDescription: Must be greater than 5 characters
    Description: Jenkins default 'user' Password
    MinLength: 5
    NoEcho: true
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: Jenkins EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.micro
      - t2.small
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  AWSInstanceType2Arch:
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-26ebbc5c
Resources:
  JenkinsInstance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          InstallAndRun:
            - Install
            - Configure
        Install:
          packages:
            yum:
              java: []
              jenkins: []
      'AWS::CloudFormation::Designer':
        id: 56ee3d6d-2a8f-4d44-b5ca-c13f62adaf8b
    Properties:
      IamInstanceProfile:
        Ref: jenkinsRoleProfile
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref JenkinsSecurityGroup
      KeyName: !Ref KeyName
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            - > 
              wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo
            - >
              rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource JenkinsInstance '
            - '         --configsets InstallAndRun '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - |
              # Signal the status from cfn-init
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource JenkinsInstance '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+
  JenkinsSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 3d485f1d-fddc-46ee-9ebf-8c79afc2c214
  jenkinsRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'cloudformation:CancelUpdateStack'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:ListStackResources'
                  - 'cloudformation:DescribeStackEvents'
                  - 'cloudformation:UpdateStack'
                Effect: Allow
                Resource:
                  - Ref: 'AWS::StackId'
              - Action:
                  - 'ec2:StartInstances'
                  - 'ec2:RunInstances'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:AuthorizeSecurityGroupIngress'
                Effect: Allow
                Resource:
                  - '*'
          PolicyName: JenkinsPolicies
    Type: 'AWS::IAM::Role'
  jenkinsRoleProfile:
    Properties:
      Roles:
        - Ref: jenkinsRole
    Type: 'AWS::IAM::InstanceProfile'
Outputs:
  WebsiteURL:
    Description: URL for newly created stack
    Description: Jenkins   application URL
    Value:
      'Fn::Join':
        - ''
        - - 'http://'
          - 'Fn::GetAtt':
              - JenkinsInstance
              - PublicIp
          - /jenkins
Metadata:
  'AWS::CloudFormation::Designer':
    589e8f21-9bb5-49f5-82f7-581ce250dffb:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 150
      z: 1
      embeds: []
    1b47019c-657c-4b91-82f5-11558ae9f314:
      size:
        width: 60
        height: 60
      position:
        x: 150
        'y': 90
      z: 1
      embeds: []
    3d485f1d-fddc-46ee-9ebf-8c79afc2c214:
      size:
        width: 60
        height: 60
      position:
        x: 270
        'y': 90
      z: 1
      embeds: []
    56ee3d6d-2a8f-4d44-b5ca-c13f62adaf8b:
      size:
        width: 60
        height: 60
      position:
        x: 150
        'y': 210
      z: 1
      embeds: []
      isassociatedwith:
        - 3d485f1d-fddc-46ee-9ebf-8c79afc2c214
      dependson:
        - 1b47019c-657c-4b91-82f5-11558ae9f314
